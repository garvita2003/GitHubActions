name: Matrix CI with Continue on Error

on:
  push:
    branches:
      - 'feature/*' 

  workflow_dispatch:

jobs:
  build-and-test:
    strategy:
      fail-fast: false # Set to 'false' to ensure all matrix jobs run even if one fails.
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Linux Specific Commands
        if: runner.os == 'Linux'
        run: |
          echo "--- Linux Specific Commands (with sudo) ---"
          sudo apt-get update -y
          sudo apt-get install -y curl
          echo "Hello from Linux" | sudo tee /opt/test_file.txt
          sudo cat /opt/test_file.txt
 
      - name: Windows Specific Commands
        if: runner.os == 'Windows'
        run: |
          echo "--- Windows Specific Commands ---"
          ipconfig /all
          mkdir C:\temp_dir
          echo Hello from Windows > C:\temp_dir\test_file.txt
          type C:\temp_dir\test_file.txt
 
      - name: macOS Specific Commands
        if: runner.os == 'macOS'
        run: |
          echo "--- macOS Specific Commands ---"
          sysctl -n machdep.cpu.brand_string
          ls -la /usr/local
          echo "Hello from macOS" > ~/test_file.txt
          cat ~/test_file.txt

      # This step will intentionally fail on Ubuntu, but the 'continue-on-error: true'
      # will ensure the Windows and macOS jobs still complete.
      - name: Simulate a Step Failure (and continue)
        if: ${{ matrix.os == 'ubuntu-latest' }} # Only run this on Ubuntu
        run: |
          echo "This step is designed to fail on Ubuntu."
          exit 1 # This command will cause the step to fail
        continue-on-error: true # This is crucial: allows the workflow to proceed despite this step's failure.

      - name: All good!
        run: echo "This job completed successfully (or continued despite errors) on ${{ matrix.os }}!"
