# .github/workflows/conditional-per-runner-job-b.yml

name: Two Jobs with Conditional Logic (Per Runner)

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering for easy testing

jobs:
  # Job A: Runs on both Ubuntu and macOS.
  # Explicitly fails the Ubuntu instance.
  job-a:
    name: Run on ${{ matrix.os_runner }}
    runs-on: ${{ matrix.os_runner }}
    strategy:
      fail-fast: false # Ensure all matrix jobs run even if one fails
      matrix:
        os_runner: [ubuntu-latest, macos-latest]
    
    # Dynamically define outputs for each runner's specific status.
    # We'll use these specific outputs in Job B's 'if' condition.
    outputs:
      status_ubuntu_latest: ${{ steps.set_specific_status.outputs.ubuntu_status }}
      status_macos_latest: ${{ steps.set_specific_status.outputs.macos_status }}

    steps:
      - name: Run Job-A logic
        id: run_job_a # ID for referencing the step's outcome (optional here, but good practice)
        run: |
          echo "Running Job-A on ${{ matrix.os_runner }}..."
          
          # --- SCENARIO: SIMULATE FAILURE FOR UBUNTU-LATEST ---
          if [ "${{ matrix.os_runner }}" == "ubuntu-latest" ]; then
            echo "Simulating a controlled failure for Job-A on ubuntu-latest."
            exit 1 # A non-zero exit code makes the step (and thus the job instance) fail.
          fi
          # --- END SCENARIO ---
          
          echo "Job-A on ${{ matrix.os_runner }} completed successfully."
      
      - name: Set specific job output status
        id: set_specific_status
        if: always() # Ensure this step runs even if 'run_job_a' failed, to capture the failure status
        run: |
          # Capture the actual job status (success or failure) for the current matrix runner.
          # We are setting distinct outputs based on the runner.
          if [ "${{ matrix.os_runner }}" == "ubuntu-latest" ]; then
            echo "ubuntu_status=${{ job.status }}" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.os_runner }}" == "macos-latest" ]; then
            echo "macos_status=${{ job.status }}" >> $GITHUB_OUTPUT
          fi


  # Job B: Runs on matrix, conditionally based on Job-A's per-runner success.
  job-b:
    name: Run on ${{ matrix.os_runner }}
    needs: job-a # Job B depends on all instances of Job A completing.
    runs-on: ${{ matrix.os_runner }}
    strategy:
      fail-fast: false # Ensure all matrix jobs of Job B run, even if one condition fails
      matrix:
        os_runner: [ubuntu-latest, macos-latest]
    
    # This is the corrected job-level 'if' condition.
    # It now checks the specific output from job-a for the current runner.
    # This works because 'needs.job-a.outputs.status_ubuntu_latest' and
    # 'needs.job-a.outputs.status_macos_latest' are distinct outputs that are
    # globally available from 'job-a' once it completes.
    if: |
      (matrix.os_runner == 'ubuntu-latest' && needs.job-a.outputs.status_ubuntu_latest == 'success') ||
      (matrix.os_runner == 'macos-latest' && needs.job-a.outputs.status_macos_latest == 'success')
      
    steps:
      - name: Run Job-B logic
        run: |
          echo "--------------------------------------------------------"
          echo "SUCCESS: Running Job-B logic on ${{ matrix.os_runner }}!"
          echo "Job-A on this runner succeeded. Proceeding with Job-B tasks."
          echo "--------------------------------------------------------"
          # Add your actual Job-B commands here (e.g., build, test, deploy)
